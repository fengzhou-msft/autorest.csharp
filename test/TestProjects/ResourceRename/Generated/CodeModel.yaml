!CodeModel 
info: !Info 
  description: The Compute Management Client.
  title: ComputeManagementClient
schemas: !Schemas 
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_7
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SshPublicKeyInfoId
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_2
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SshPublicKeyInfoType
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_3
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SshPublicKeyInfoName
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_4
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SshPublicKeyPropertiesPath
          description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
      protocol: !Protocols {}
    - !StringSchema &ref_5
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      language: !Languages 
        default:
          name: SshPublicKeyPropertiesKeyData
          description: >-
            SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in
            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_8
      type: constant
      value: !ConstantValue 
        value: '2020-06-01'
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApiVersion20200601
          description: Api Version (2020-06-01)
      protocol: !Protocols {}
    - !ConstantSchema &ref_12
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_14
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_13
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-06-01'
      properties:
        - !Property 
          schema: *ref_1
          readOnly: true
          serializedName: id
          language: !Languages 
            default:
              name: id
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_2
          readOnly: true
          serializedName: type
          language: !Languages 
            default:
              name: type
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_3
          readOnly: true
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: ''
          protocol: !Protocols {}
        - !Property &ref_16
          schema: !ObjectSchema &ref_6
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-06-01'
            properties:
              - !Property 
                schema: *ref_4
                serializedName: path
                language: !Languages 
                  default:
                    name: path
                    description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
                protocol: !Protocols {}
              - !Property 
                schema: *ref_5
                serializedName: keyData
                language: !Languages 
                  default:
                    name: keyData
                    description: >-
                      SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs
                      in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: SshPublicKeyProperties
                description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
                namespace: ''
            protocol: !Protocols {}
          serializedName: properties
          language: !Languages 
            default:
              name: properties
              description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      language: !Languages 
        default:
          name: SshPublicKeyInfo
          description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
          namespace: ''
      protocol: !Protocols {}
    - *ref_6
globalParameters:
  - !Parameter &ref_11
    schema: *ref_7
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !Languages 
      default:
        name: SubscriptionId
        description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
        serializedName: subscriptionId
    protocol: !Protocols 
      http: !HttpParameter 
        in: path
  - !Parameter &ref_9
    schema: *ref_0
    clientDefaultValue: https://management.azure.com
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
  - !Parameter &ref_10
    schema: *ref_8
    implementation: Client
    origin: modelerfour:synthesized/api-version
    required: true
    language: !Languages 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
operationGroups:
  - !OperationGroup 
    $key: SshPublicKeys
    operations:
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_9
          - !Parameter &ref_18
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_19
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: sshPublicKeyName
                description: The name of the SSH public key.
                serializedName: sshPublicKeyName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_10
          - *ref_11
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_12
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_15
                schema: *ref_13
                flattened: true
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: Parameters supplied to create the SSH public key.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_14
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !VirtualParameter &ref_17
                schema: *ref_6
                implementation: Method
                originalParameter: *ref_15
                pathToProperty: []
                targetProperty: *ref_16
                language: !Languages 
                  default:
                    name: properties
                    description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
                protocol: !Protocols {}
            signatureParameters:
              - *ref_17
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_18
          - *ref_19
        responses:
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: Created
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        language: !Languages 
          default:
            name: Create
            description: Creates a new SSH public key resource.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_9
          - !Parameter &ref_20
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_21
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: sshPublicKeyName
                description: The name of the SSH public key.
                serializedName: sshPublicKeyName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_10
          - *ref_11
        requests:
          - !Request 
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_20
          - *ref_21
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        language: !Languages 
          default:
            name: Delete
            description: Delete an SSH public key.
        protocol: !Protocols {}
      - !Operation 
        apiVersions:
          - !ApiVersion 
            version: '2020-06-01'
        parameters:
          - *ref_9
          - !Parameter &ref_22
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: resourceGroupName
                description: The name of the resource group.
                serializedName: resourceGroupName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_23
            schema: *ref_7
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: sshPublicKeyName
                description: The name of the SSH public key.
                serializedName: sshPublicKeyName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_10
          - *ref_11
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_14
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_22
          - *ref_23
        responses:
          - !SchemaResponse 
            schema: *ref_13
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !Languages 
          default:
            name: Get
            description: Retrieves information about an SSH public key.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: SshPublicKeys
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: true
  schemes:
    - !AADTokenSecurityScheme 
      type: AADToken
      scopes:
        - https://management.azure.com/.default
language: !Languages 
  default:
    name: ComputeManagementClient
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
